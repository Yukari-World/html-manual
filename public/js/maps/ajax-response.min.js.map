{"version":3,"sources":["ajax-response.js"],"names":["checkStatus","response","status","error","Error","statusText","parseJSON","json","SendAjax","sendURL","form","methodType","Promise","resolve","reject","self","fetch","sendStruct","url","method","body","params","URLSearchParams","undefined","keys","a","set","get","then","catch","xhr","XMLHttpRequest","open","addEventListener","readyState","timeout","send"],"mappings":"AAgBA,SAASA,YAAYC,GAGpB,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC/C,OAAOD,EACD,CACN,IAAIE,EAAQ,IAAIC,MAAMH,EAASI,YAE/B,MADAF,EAAMF,SAAWA,EACXE,GAYR,SAASG,UAAUL,GAElB,OAAOA,EAASM,cAaV,SAASC,SAASC,EAASC,EAAMC,GACvC,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GACrC,GAAIC,KAAKC,MAAO,CACf,IAAIC,EACAC,EAGJ,GAAmB,SAAfP,GAAwC,SAAfA,EAC5BO,EAAMT,EACNQ,EAAa,CACZE,OAAQR,EACRS,KAAMV,OAED,CACNQ,EAAMT,EAAU,IAGhB,MAAMY,EAAS,IAAIC,gBAEnB,QAAkBC,IAAdb,EAAKc,KACR,IAAK,IAAIC,KAAKf,EAAKc,OAClBH,EAAOK,IAAID,EAAGf,EAAKiB,IAAIF,IAGzBP,GAAOG,EACPJ,EAAa,CACZE,OAAQR,GAIVK,MAAME,EAAKD,GACTW,KAAK5B,aACL4B,KAAKtB,WACLsB,KAAK,SAAUrB,GACfM,EAAQN,KAERsB,MAAM,SAAU1B,GAChBW,EAAOX,SAEH,CAEN,IAAI2B,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQvB,GAAS,GAC1BqB,EAAIG,iBAAiB,OAAQ,WACL,IAAnBH,EAAII,YAAmC,MAAfJ,EAAI5B,QAC/BW,EAAQiB,EAAI7B,YAId6B,EAAIG,iBAAiB,QAAS,SAAU9B,GACvCW,EAAOX,KAGR2B,EAAIG,iBAAiB,UAAW,WAC/BnB,EAAO,wBAGRgB,EAAIK,QAAU,IACdL,EAAIM,KAAK1B","file":"ajax-response.min.js","sourcesContent":["/**\n * @fileoverview Ajaxレスポンス取得処理に使用するAjax\n *\n * @module  ajax-response\n * @since   1.0.0\n * @version 1.0.2\n */\n\n/**\n * HTTPステータスコードの確認\n *\n * @param   {Response}          response    レスポンスデータ\n * @returns {Response|Error}                HTTPステータスコードが200番台ならレスポンスデータ、そうでなければエラー\n * @since   1.0.0\n * @version 1.0.2\n */\nfunction checkStatus(response) {\n\t// HTTPステータスコードが200番台ではない場合\n\t// 類似方法にresponse.okがあるが大部分のブラウザが非対応なので非推奨\n\tif (response.status >= 200 && response.status < 300) {\n\t\treturn response;\n\t} else {\n\t\tlet error = new Error(response.statusText);\n\t\terror.response = response;\n\t\tthrow error;\n\t}\n}\n\n/**\n * JSONデータの切り出し\n *\n * @param   {Response}  response    レスポンスデータ\n * @returns {JSON}                  レスポンスに格納されているJSONデータ\n * @since   1.0.0\n * @version 1.0.2\n */\nfunction parseJSON(response) {\n\t// console.log(response);\n\treturn response.json();\n}\n\n/**\n * Ajax転送処理\n *\n * @param   {string}                        sendURL             転送先URL\n * @param   {FormData}                      [form]              転送するForm Data(無くても問題ない)\n * @param   {string}                        [methodType='POST'] 転送メソッド\n * @returns {Promise.JSON|Promise.Error}                        JSONデータもしくはエラー内容\n * @since   1.0.0\n * @version 1.0.2\n */\nexport function SendAjax(sendURL, form, methodType) {\n\treturn new Promise(function (resolve, reject) {\n\t\tif (self.fetch) {\n\t\t\tlet sendStruct;\n\t\t\tlet url;\n\n\t\t\t// POSTとGETでは転送処理が異なるのでここで処理を行う\n\t\t\tif (methodType === 'POST' || methodType === 'post') {\n\t\t\t\turl = sendURL;\n\t\t\t\tsendStruct = {\n\t\t\t\t\tmethod: methodType,\n\t\t\t\t\tbody: form\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\turl = sendURL + '?';\n\n\t\t\t\t// GETのURLを作ってくれるらしい\n\t\t\t\tconst params = new URLSearchParams();\n\t\t\t\t// MicrosoftEdgeは未対応のための処置(対策になっていない)\n\t\t\t\tif (form.keys !== undefined) {\n\t\t\t\t\tfor (let a of form.keys()) {\n\t\t\t\t\t\tparams.set(a, form.get(a));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\turl += params;\n\t\t\t\tsendStruct = {\n\t\t\t\t\tmethod: methodType,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfetch(url, sendStruct)\n\t\t\t\t.then(checkStatus)\n\t\t\t\t.then(parseJSON)\n\t\t\t\t.then(function (json) {\n\t\t\t\t\tresolve(json);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\t// Fetch API未対応時の処理\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\txhr.open('POST', sendURL, true);\n\t\t\txhr.addEventListener('load', function () {\n\t\t\t\tif (xhr.readyState === 4 && xhr.status === 200) {\n\t\t\t\t\tresolve(xhr.response);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\txhr.addEventListener('error', function (error) {\n\t\t\t\treject(error);\n\t\t\t});\n\n\t\t\txhr.addEventListener('timeout', function () {\n\t\t\t\treject('connection timeout');\n\t\t\t});\n\n\t\t\txhr.timeout = 30000;\n\t\t\txhr.send(form);\n\t\t}\n\t});\n}\n"]}