{"version":3,"sources":["common.js"],"names":["Popup","[object Object]","name","this","nodeBody","document","body","div","createElement","setAttribute","style","position","insertBefore","querySelector","text","top","left","getElementById","display","textContent","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","length","date_days","targetDate","match","date","Date","getFullYear","Number","split","getMonth","getDate"],"mappings":"OAqBO,MAAMA,MAOZC,YAAYC,GAKXC,KAAKD,KAAO,SAAWA,EAEvB,IAAIE,EAAWC,SAASC,KACxB,MAAMC,EAAMF,SAASG,cAAc,OACnCD,EAAIE,aAAa,KAAMN,KAAKD,MAC5BK,EAAIG,MAAMC,SAAW,WAErBP,EAASQ,aAAaL,EAAKF,SAASQ,cAAc,WAGnDZ,KAAKa,EAAMC,EAAKC,GACf,MAAMT,EAAMF,SAASY,eAAed,KAAKD,MACzCK,EAAIG,MAAMQ,QAAU,QACpBX,EAAIG,MAAMK,IAAMA,EAChBR,EAAIG,MAAMM,KAAOA,EACjBT,EAAIY,YAAcL,EAGnBb,KAAKc,EAAKC,GACT,MAAMT,EAAMF,SAASY,eAAed,KAAKD,MACzCK,EAAIG,MAAMK,IAAMA,EAChBR,EAAIG,MAAMM,KAAOA,EAGlBf,OACC,MAAMM,EAAMF,SAASY,eAAed,KAAKD,MACzCK,EAAIG,MAAMQ,QAAU,OACpBX,EAAIY,YAAc,WAiBb,SAASC,iBAAiBC,GAChC,IAAIC,EAAUC,OAAOF,GACrB,IACC,IAAIG,EAAI,mBAGR,OAFAF,EAAQG,QAAQD,EAAGA,GACnBF,EAAQI,WAAWF,IACZ,EACN,MAAOG,GACR,OAAOA,aAAaC,eAER,KAAXD,EAAEE,MAES,OAAXF,EAAEE,MAGS,uBAAXF,EAAEzB,MAES,+BAAXyB,EAAEzB,OAEiB,IAAnBoB,EAAQQ,eAYJ,SAASC,UAAUC,GAEzB,GAAmB,KAAfA,EACH,OAAO,EAIR,GAAIA,EAAWC,MAAM,6BAA8B,CAClD,IAAIC,EAAO,IAAIC,KAAKH,GACpB,GAAIE,EAAKE,gBAAkBC,OAAOL,EAAWM,MAAM,KAAK,KAAOJ,EAAKK,aAAeF,OAAOL,EAAWM,MAAM,KAAK,GAAK,IAAMJ,EAAKM,YAAcH,OAAOL,EAAWM,MAAM,KAAK,IAC1K,OAAO,OAEF,GAAIN,EAAWC,MAAM,2BAA4B,CACvD,IAAIC,EAAO,IAAIC,KAAKH,GACpB,GAAIE,EAAKE,gBAAkBC,OAAOL,EAAWM,MAAM,KAAK,KAAOJ,EAAKK,aAAeF,OAAOL,EAAWM,MAAM,KAAK,GAAK,IAAMJ,EAAKM,YAAcH,OAAOL,EAAWM,MAAM,KAAK,IAC1K,OAAO,EAIT,OAAO","file":"common.min.js","sourcesContent":["/**\n * @file マニュアル用コモンJavaScript\n *\n * @module  manual-common\n * @since   1.0.0\n * @version 1.0.1\n */\n\n// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n// Initialize\n\n// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n// Export Class\n\n/**\n * ポップアップクラス\n *\n * @type    {class}\n * @since   1.0.1\n * @version 1.0.1\n */\nexport class Popup {\n\t/**\n\t * コンストラクタメソッド\n\t *\n\t * @constructs\n\t * @param {string}  name    Name\n\t */\n\tconstructor(name) {\n\t\t/**\n\t\t * ポップアップ表示ID\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = 'popup_' + name;\n\n\t\tlet nodeBody = document.body;\n\t\tconst div = document.createElement('div');\n\t\tdiv.setAttribute('id', this.name);\n\t\tdiv.style.position = 'absolute';\n\n\t\tnodeBody.insertBefore(div, document.querySelector('header'));\n\t}\n\n\tshow(text, top, left) {\n\t\tconst div = document.getElementById(this.name);\n\t\tdiv.style.display = 'block';\n\t\tdiv.style.top = top;\n\t\tdiv.style.left = left;\n\t\tdiv.textContent = text;\n\t}\n\n\tmove(top, left) {\n\t\tconst div = document.getElementById(this.name);\n\t\tdiv.style.top = top;\n\t\tdiv.style.left = left;\n\t}\n\n\thide() {\n\t\tconst div = document.getElementById(this.name);\n\t\tdiv.style.display = 'none';\n\t\tdiv.textContent = '';\n\t}\n}\n\n// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n// Export Function\n\n/**\n * ローカルストレージの環境が利用可能か調べる関数\n *\n * {@link https://developer.mozilla.org/ja/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API MDN}より参照\n *\n * @param   {string}    type    調べる項目\n * @returns {boolean}           利用可能かのbool\n * @since   1.0.1\n * @version 1.0.1\n */\nexport function storageAvailable(type) {\n\tlet storage = window[type];\n\ttry {\n\t\tlet x = '__storage_test__';\n\t\tstorage.setItem(x, x);\n\t\tstorage.removeItem(x);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn e instanceof DOMException && (\n\t\t\t// everything except Firefox\n\t\t\te.code === 22 ||\n\t\t\t// Firefox\n\t\t\te.code === 1014 ||\n\t\t\t// test name field too, because code might not be present\n\t\t\t// everything except Firefox\n\t\t\te.name === 'QuotaExceededError' ||\n\t\t\t// Firefox\n\t\t\te.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n\t\t\t// acknowledge QuotaExceededError only if there's something already stored\n\t\t\tstorage.length !== 0;\n\t}\n}\n\n/**\n * 日付の整合性を調べる\n *\n * @param   {string}    targetDate  対象の日付文字列\n * @returns {boolean}               整合性結果\n * @since   1.0.0\n * @version 1.0.1\n */\nexport function date_days(targetDate) {\n\t// 空文字は問答無用でエラー\n\tif (targetDate === '') {\n\t\treturn false;\n\t}\n\n\t// Year/Month/Day もしくは Year-Month-Day の形式のみ許容する\n\tif (targetDate.match(/^\\d{4}\\/\\d{1,2}\\/\\d{1,2}$/)) {\n\t\tlet date = new Date(targetDate);\n\t\tif (date.getFullYear() !== Number(targetDate.split('/')[0]) || date.getMonth() !== Number(targetDate.split('/')[1] - 1) || date.getDate() !== Number(targetDate.split('/')[2])) {\n\t\t\treturn false;\n\t\t}\n\t} else if (targetDate.match(/^\\d{4}-\\d{1,2}-\\d{1,2}$/)) {\n\t\tlet date = new Date(targetDate);\n\t\tif (date.getFullYear() !== Number(targetDate.split('-')[0]) || date.getMonth() !== Number(targetDate.split('-')[1] - 1) || date.getDate() !== Number(targetDate.split('-')[2])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n"]}